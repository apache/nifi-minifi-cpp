diff -rupN orig/CMakeLists.txt patched/CMakeLists.txt
--- orig/CMakeLists.txt	2019-02-11 23:02:52.000000000 +0100
+++ patched/CMakeLists.txt	2020-04-28 13:35:01.000000000 +0200
@@ -726,8 +726,8 @@ else()
 endif()
 
 set(ROCKSDB_STATIC_LIB rocksdb${ARTIFACT_SUFFIX})
-set(ROCKSDB_SHARED_LIB rocksdb-shared${ARTIFACT_SUFFIX})
-set(ROCKSDB_IMPORT_LIB ${ROCKSDB_SHARED_LIB})
+#set(ROCKSDB_SHARED_LIB rocksdb-shared${ARTIFACT_SUFFIX})
+#set(ROCKSDB_IMPORT_LIB ${ROCKSDB_SHARED_LIB})
 
 option(WITH_LIBRADOS "Build with librados" OFF)
 if(WITH_LIBRADOS)
@@ -741,36 +741,36 @@ if(WIN32)
   set(LIBS ${ROCKSDB_STATIC_LIB} ${THIRDPARTY_LIBS} ${SYSTEM_LIBS})
 else()
   set(SYSTEM_LIBS ${CMAKE_THREAD_LIBS_INIT})
-  set(LIBS ${ROCKSDB_SHARED_LIB} ${THIRDPARTY_LIBS} ${SYSTEM_LIBS})
-
-  add_library(${ROCKSDB_SHARED_LIB} SHARED ${SOURCES})
-  target_link_libraries(${ROCKSDB_SHARED_LIB}
-    ${THIRDPARTY_LIBS} ${SYSTEM_LIBS})
-  set_target_properties(${ROCKSDB_SHARED_LIB} PROPERTIES
-                        LINKER_LANGUAGE CXX
-                        VERSION ${ROCKSDB_VERSION}
-                        SOVERSION ${ROCKSDB_VERSION_MAJOR}
-                        CXX_STANDARD 11
-                        OUTPUT_NAME "rocksdb")
+  set(LIBS ${ROCKSDB_STATIC_LIB} ${THIRDPARTY_LIBS} ${SYSTEM_LIBS})
+#
+#  add_library(${ROCKSDB_SHARED_LIB} SHARED ${SOURCES})
+#  target_link_libraries(${ROCKSDB_SHARED_LIB}
+#    ${THIRDPARTY_LIBS} ${SYSTEM_LIBS})
+#  set_target_properties(${ROCKSDB_SHARED_LIB} PROPERTIES
+#                        LINKER_LANGUAGE CXX
+#                        VERSION ${ROCKSDB_VERSION}
+#                        SOVERSION ${ROCKSDB_VERSION_MAJOR}
+#                        CXX_STANDARD 11
+#                        OUTPUT_NAME "rocksdb")
 endif()
 
 add_library(${ROCKSDB_STATIC_LIB} STATIC ${SOURCES})
 target_link_libraries(${ROCKSDB_STATIC_LIB}
   ${THIRDPARTY_LIBS} ${SYSTEM_LIBS})
 
-if(WIN32)
-  add_library(${ROCKSDB_IMPORT_LIB} SHARED ${SOURCES})
-  target_link_libraries(${ROCKSDB_IMPORT_LIB}
-    ${THIRDPARTY_LIBS} ${SYSTEM_LIBS})
-  set_target_properties(${ROCKSDB_IMPORT_LIB} PROPERTIES
-    COMPILE_DEFINITIONS "ROCKSDB_DLL;ROCKSDB_LIBRARY_EXPORTS")
-  if(MSVC)
-    set_target_properties(${ROCKSDB_STATIC_LIB} PROPERTIES
-      COMPILE_FLAGS "/Fd${CMAKE_CFG_INTDIR}/${ROCKSDB_STATIC_LIB}.pdb")
-    set_target_properties(${ROCKSDB_IMPORT_LIB} PROPERTIES
-      COMPILE_FLAGS "/Fd${CMAKE_CFG_INTDIR}/${ROCKSDB_IMPORT_LIB}.pdb")
-  endif()
-endif()
+#if(WIN32)
+#  add_library(${ROCKSDB_IMPORT_LIB} SHARED ${SOURCES})
+#  target_link_libraries(${ROCKSDB_IMPORT_LIB}
+#    ${THIRDPARTY_LIBS} ${SYSTEM_LIBS})
+#  set_target_properties(${ROCKSDB_IMPORT_LIB} PROPERTIES
+#    COMPILE_DEFINITIONS "ROCKSDB_DLL;ROCKSDB_LIBRARY_EXPORTS")
+#  if(MSVC)
+#    set_target_properties(${ROCKSDB_STATIC_LIB} PROPERTIES
+#      COMPILE_FLAGS "/Fd${CMAKE_CFG_INTDIR}/${ROCKSDB_STATIC_LIB}.pdb")
+#    set_target_properties(${ROCKSDB_IMPORT_LIB} PROPERTIES
+#      COMPILE_FLAGS "/Fd${CMAKE_CFG_INTDIR}/${ROCKSDB_IMPORT_LIB}.pdb")
+#  endif()
+#endif()
 
 option(WITH_JNI "build with JNI" OFF)
 if(WITH_JNI OR JNI)
@@ -818,14 +818,14 @@ if(NOT WIN32 OR ROCKSDB_INSTALL_ON_WINDO
     INCLUDES DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}"
   )
 
-  install(
-    TARGETS ${ROCKSDB_SHARED_LIB}
-    EXPORT RocksDBTargets
-    COMPONENT runtime
-    RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
-    LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-    INCLUDES DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}"
-  )
+#  install(
+#    TARGETS ${ROCKSDB_SHARED_LIB}
+#    EXPORT RocksDBTargets
+#    COMPONENT runtime
+#    RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
+#    LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+#    INCLUDES DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}"
+#  )
 
   install(
     EXPORT RocksDBTargets
diff -rupN orig/tools/CMakeLists.txt patched/tools/CMakeLists.txt
--- orig/tools/CMakeLists.txt	2019-02-11 23:02:52.000000000 +0100
+++ patched/tools/CMakeLists.txt	2020-04-28 13:54:05.000000000 +0200
@@ -19,3 +19,5 @@ add_custom_target(tools
 add_custom_target(ldb_tests
   COMMAND python ${CMAKE_CURRENT_SOURCE_DIR}/ldb_tests.py
   DEPENDS ldb)
+install(TARGETS ${tool_deps}
+  RUNTIME DESTINATION bin)
