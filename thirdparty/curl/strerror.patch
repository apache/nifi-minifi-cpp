diff --git a/lib/strerror.c b/lib/strerror.c
index bd9cc535c..0da7b09e4 100644
--- a/lib/strerror.c
+++ b/lib/strerror.c
@@ -861,7 +861,8 @@ const char *Curl_strerror(int err, char *buf, size_t buflen)
   }
 #else /* not Windows coming up */
 
-#if defined(HAVE_STRERROR_R) && defined(HAVE_POSIX_STRERROR_R)
+#if defined(HAVE_STRERROR_R)
+#if (_POSIX_C_SOURCE >= 200112L || _XOPEN_SOURCE >= 600) && ! _GNU_SOURCE
  /*
   * The POSIX-style strerror_r() may set errno to ERANGE if insufficient
   * storage is supplied via 'strerrbuf' and 'buflen' to hold the generated
@@ -871,7 +872,7 @@ const char *Curl_strerror(int err, char *buf, size_t buflen)
     if('\0' == buf[0])
       msnprintf(buf, max, "Unknown error %d", err);
   }
-#elif defined(HAVE_STRERROR_R) && defined(HAVE_GLIBC_STRERROR_R)
+#else
  /*
   * The glibc-style strerror_r() only *might* use the buffer we pass to
   * the function, but it always returns the error message as a pointer,
@@ -885,6 +886,7 @@ const char *Curl_strerror(int err, char *buf, size_t buflen)
     else
       msnprintf(buf, max, "Unknown error %d", err);
   }
+#endif
 #else
   {
     /* !checksrc! disable STRERROR 1 */
