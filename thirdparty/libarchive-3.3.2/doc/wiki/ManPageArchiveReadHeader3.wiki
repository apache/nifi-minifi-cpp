ARCHIVE_READ_HEADER(3) manual page 
== NAME == 
'''archive_read_next_header''', 
'''archive_read_next_header2''' 
- functions for reading streaming archives 
== LIBRARY == 
Streaming Archive Library (libarchive, -larchive) 
== SYNOPSIS == 
'''<nowiki>#include <archive.h></nowiki>''' 
<br> 
''int'' 
<br> 
'''archive_read_next_header'''(''struct archive *'', ''struct archive_entry **''); 
<br> 
''int'' 
<br> 
'''archive_read_next_header2'''(''struct archive *'', ''struct archive_entry *''); 
== DESCRIPTION == 
<dl> 
<dt>'''archive_read_next_header'''()</dt><dd> 
Read the header for the next entry and return a pointer to 
a 
'''struct archive_entry .''' 
This is a convenience wrapper around 
'''archive_read_next_header2'''() 
that reuses an internal 
'''struct archive_entry''' 
object for each request. 
</dd><dt>'''archive_read_next_header2'''()</dt><dd> 
Read the header for the next entry and populate the provided 
'''struct archive_entry .''' 
</dd></dl> 
== RETURN VALUES == 
These functions return 
'''ARCHIVE_OK''' 
(the operation succeeded), 
'''ARCHIVE_WARN''' 
(the operation succeeded but a non-critical error was encountered), 
'''ARCHIVE_EOF''' 
(end-of-archive was encountered), 
'''ARCHIVE_RETRY''' 
(the operation failed but can be retried), 
and 
'''ARCHIVE_FATAL''' 
(there was a fatal error; the archive should be closed immediately). 
== ERRORS == 
Detailed error codes and textual descriptions are available from the 
'''archive_errno'''() 
and 
'''archive_error_string'''() 
functions. 
== SEE ALSO == 
[[ManPageBsdtar1]], 
[[ManPageibarchive3]], 
[[ManPagerchiveead3]], 
[[ManPagerchiveeadata3]], 
[[ManPagerchiveeadxtract3]], 
[[ManPagerchiveeadilter3]], 
[[ManPagerchiveeadormat3]], 
[[ManPagerchiveeadpen3]], 
[[ManPagerchiveeadetptions3]], 
[[ManPagerchivetil3]], 
[[ManPageTar5]] 
