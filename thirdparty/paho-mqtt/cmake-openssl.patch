diff --git a/CMakeLists.txt b/CMakeLists.txt
index ef145cd..a069f83 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -26,7 +26,7 @@ message(STATUS "CMake version: " ${CMAKE_VERSION})
 message(STATUS "CMake system name: " ${CMAKE_SYSTEM_NAME})
 
 set(CMAKE_SCRIPTS "${PROJECT_SOURCE_DIR}/cmake")
-set(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake/modules")
+list(APPEND CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake/modules")
 
 ## Project Version
 ## Previously we read in the version from these files, but now we use the 
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 16382c1..c56d703 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -412,22 +412,24 @@ install(
     ${CMAKE_INSTALL_LIBDIR}/cmake/eclipse-paho-mqtt-c
 )
 
-# Base64 test
-add_executable(Base64Test EXCLUDE_FROM_ALL Base64.c Base64.h)
-target_compile_definitions(Base64Test PUBLIC BASE64_TEST)
-
-if(PAHO_WITH_SSL OR PAHO_WITH_LIBRESSL)
-  add_executable(Base64TestOpenSSL EXCLUDE_FROM_ALL Base64.c Base64.h )
-  target_link_libraries(Base64TestOpenSSL ${SSL_LIBRARY_NAME}::SSL ${SSL_LIBRARY_NAME}::Crypto)
-  target_compile_definitions(Base64TestOpenSSL PUBLIC BASE64_TEST OPENSSL=1)
-endif()
+if(PAHO_ENABLE_TESTING)
+  # Base64 test
+  add_executable(Base64Test EXCLUDE_FROM_ALL Base64.c Base64.h)
+  target_compile_definitions(Base64Test PUBLIC BASE64_TEST)
+
+  if(PAHO_WITH_SSL OR PAHO_WITH_LIBRESSL)
+    add_executable(Base64TestOpenSSL EXCLUDE_FROM_ALL Base64.c Base64.h )
+    target_link_libraries(Base64TestOpenSSL ${SSL_LIBRARY_NAME}::SSL ${SSL_LIBRARY_NAME}::Crypto)
+    target_compile_definitions(Base64TestOpenSSL PUBLIC BASE64_TEST OPENSSL=1)
+  endif()
 
-# SHA1 test
-add_executable(Sha1Test EXCLUDE_FROM_ALL SHA1.c SHA1.h)
-target_compile_definitions(Sha1Test PUBLIC SHA1_TEST)
+  # SHA1 test
+  add_executable(Sha1Test EXCLUDE_FROM_ALL SHA1.c SHA1.h)
+  target_compile_definitions(Sha1Test PUBLIC SHA1_TEST)
 
-if(PAHO_WITH_SSL OR PAHO_WITH_LIBRESSL)
-	add_executable(Sha1TestOpenSSL EXCLUDE_FROM_ALL SHA1.c SHA1.h)
-	target_link_libraries(Sha1TestOpenSSL ${SSL_LIBRARY_NAME}::SSL ${SSL_LIBRARY_NAME}::Crypto)
-	target_compile_definitions(Sha1TestOpenSSL PUBLIC SHA1_TEST OPENSSL=1)
+  if(PAHO_WITH_SSL OR PAHO_WITH_LIBRESSL)
+    add_executable(Sha1TestOpenSSL EXCLUDE_FROM_ALL SHA1.c SHA1.h)
+    target_link_libraries(Sha1TestOpenSSL ${SSL_LIBRARY_NAME}::SSL ${SSL_LIBRARY_NAME}::Crypto)
+    target_compile_definitions(Sha1TestOpenSSL PUBLIC SHA1_TEST OPENSSL=1)
+  endif()
 endif()
